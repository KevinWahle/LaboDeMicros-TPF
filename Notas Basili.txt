/**********************************************************
********************    BASILI    *************************
**********************************************************/

TODO:
  - Display:
    - Probar que funcione con el I2C buffer de schembe.
      (La version bloqueante ya funciona)

  - Matriz:
    - Integrarla a la FSM.
  
  - FSM:
    - Los inits de ciertos módulos NO pueden ir en el App_init(). 
      De ser necesario armar otro estado y que los inits se ejecuten al salir de dicho estado
    - Checkear que funcione todo
    - Agregar parte de FileSystem
    - Determinar como las muestras llegan a la parte de DSP
    - Que info de la cancion necesito? Nombre para mostrar en el menu

  - Keypad:
    - Mejorar el modulo y agregarle antirebote  

/**********************************************************
********************    BAUTI    *************************
**********************************************************/
// Al .c: 
#define GAINMAX 20
#define GAINMIN -20
#define STEP    1
#define CANT_BANDS  (BAND_OTHERS-BAND200)

static int bands_gain[4]={0,0,0,0};

void gainBand(uint8_t band){
    bands_gain[band] = (bands_gain[band]+STEP <= GAINMAX)? bands_gain[band]+STEP: GAINMAX;          
}

void atenuateBand(uint8_t band){
    bands_gain[band] = (bands_gain[band]-STEP >= GAINMIN)? bands_gain[band]-STEP: GAINMIN;          
}

void resetEqualizer(){
    for (uint8_t i = 0; i <= BAND_OTHERS; i++){
        bands_gain[i]=0;
    }    
}

// Al .h:  

// setea internamente la ganacia de la band del ecu en gain
void setGainBand(uint8_t band, int gain);

// devuleve internamente la ganacia de la band del ecu en gain
int getGainBand(uint8_t band);

// Devuelve las ganancias a 0db
void resetEqualizer();



// incrementa el volumen en un step(elegir con criterio) y 
// devuelve 1 si efectivamente cambio y sino 0
bool volume_up();

// decrementa el volumen en un step(elegir con criterio) y 
// devuelve 1 si efectivamente cambio y sino 0
bool volume_down();

// Retorna el valor del volumen actual
uint8_t get_volume();

/**********************************************************
********************    SERGIO    *************************
**********************************************************/
// paso un SONG_INFO_T* y me guarda ahi la data de la cancion
void readMetaSong(actual_song)

// setea el estado del reproductor en pausa o play
void set_state(uint8_t state);

// dice en qué estado esta el reproductor
uint8_t get_state();
 